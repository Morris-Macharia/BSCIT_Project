<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>AI Claims Fraud Detection</title>
  <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
  <style>
    body { background: #f2f2f2; }
    .metric-card { min-width: 140px; }
    .table-responsive { max-height: 400px; overflow-y: auto; }
  </style>
</head>
<body>
<div class="container my-5">

  <h1 class="text-center mb-4">AI Claims Fraud Detection</h1>

  <!-- Upload Card -->
  <div class="card mb-4 shadow-sm">
    <div class="card-body">
      <h5 class="card-title">Bulk CSV Upload</h5>
      <form id="upload-form" class="form-inline justify-content-center">
        <div class="form-group mb-2">
          <input type="file" class="form-control-file" id="csvFile" accept=".csv" required>
        </div>
        <button type="submit" class="btn btn-primary mb-2 ml-2">
          <span class="fa fa-upload"></span> Upload & Predict
        </button>
      </form>
    </div>
  </div>

  <!-- Loading Spinner -->
  <div id="loading" class="text-center text-secondary mb-4" style="display:none;">
    <div class="spinner-border text-primary" role="status">
      <span class="sr-only">Loading...</span>
    </div>
    <div>Processing file, please waitâ€¦</div>
  </div>

  <!-- Metrics Panel -->
  <div id="metrics" class="d-flex justify-content-around mb-4" style="display:none;">
    <div class="card text-white bg-info metric-card">
      <div class="card-body">
        <h6 class="card-title">Accuracy</h6>
        <p id="m-accuracy" class="h4 mb-0"></p>
      </div>
    </div>
    <div class="card text-white bg-success metric-card">
      <div class="card-body">
        <h6 class="card-title">Precision</h6>
        <p id="m-precision" class="h4 mb-0"></p>
      </div>
    </div>
    <div class="card text-white bg-warning metric-card">
      <div class="card-body">
        <h6 class="card-title">Recall</h6>
        <p id="m-recall" class="h4 mb-0"></p>
      </div>
    </div>
    <div class="card text-white bg-secondary metric-card">
      <div class="card-body">
        <h6 class="card-title">F1 Score</h6>
        <p id="m-f1" class="h4 mb-0"></p>
      </div>
    </div>
    <div class="card text-white bg-dark metric-card">
      <div class="card-body">
        <h6 class="card-title">ROC AUC</h6>
        <p id="m-rocauc" class="h4 mb-0"></p>
      </div>
    </div>
  </div>

  <!-- Summary Panel -->
  <div id="summary" class="text-center mb-4" style="display:none;">
    <h5>Summary of Claims</h5>
    <p><strong>Total Claims:</strong> <span id="s-total"></span></p>
    <p><strong>Fraudulent Claims:</strong> <span id="s-fraudulent"></span></p>
    <p><strong>Legitimate Claims:</strong> <span id="s-legitimate"></span></p>
  </div>

  <!-- Results Table -->
  <div id="results" class="table-responsive mb-4"></div>

  <!-- Download Button -->
  <div class="text-center">
    <button id="download-btn" class="btn btn-success" style="display:none;">
      <span class="fa fa-download"></span> Download CSV
    </button>
  </div>

</div>

<script src="https://kit.fontawesome.com/a076d05399.js"></script>
<script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
<script>
  let lastData = [];

  document.getElementById('upload-form').addEventListener('submit', async e => {
    e.preventDefault();
    const loader = document.getElementById('loading');
    const results = document.getElementById('results');
    const metrics = document.getElementById('metrics');
    const summary = document.getElementById('summary');
    const dlBtn = document.getElementById('download-btn');

    // Reset UI
    loader.style.display = 'block';
    results.innerHTML = '';
    metrics.style.display = 'none';
    summary.style.display = 'none';
    dlBtn.style.display = 'none';

    // Form data
    const fileInput = document.getElementById('csvFile');
    if (!fileInput.files.length) {
      results.innerHTML = `<p class="text-danger">Please select a CSV file.</p>`;
      loader.style.display = 'none';
      return;
    }
    const formData = new FormData();
    formData.append('file', fileInput.files[0]);

    try {
      const resp = await fetch('/upload_csv', { method:'POST', body: formData });
      const payload = await resp.json();
      loader.style.display = 'none';

      if (!resp.ok) {
        throw new Error(payload.error || resp.statusText);
      }

      // Unpack response
      const { records, metrics: m, summary: s } = payload;
      lastData = records;

      // Show metrics
      if (m && Object.keys(m).length) {
        document.getElementById('m-accuracy').innerText = `${m.accuracy.toFixed(2)}%`;
        document.getElementById('m-precision').innerText = `${m.precision.toFixed(2)}%`;
        document.getElementById('m-recall').innerText = `${m.recall.toFixed(2)}%`;
        document.getElementById('m-f1').innerText = `${m.f1.toFixed(2)}%`;
        document.getElementById('m-rocauc').innerText = `${m.roc_auc.toFixed(2)}%`;
        metrics.style.display = 'flex';
      }

      // Show summary
      if (s) {
        document.getElementById('s-total').innerText = s.total;
        document.getElementById('s-fraudulent').innerText = s.fraudulent;
        document.getElementById('s-legitimate').innerText = s.legitimate;
        summary.style.display = 'block';
      }

      // Render table
      renderTable(records);
      dlBtn.style.display = 'inline-block';

    } catch(err) {
      loader.style.display = 'none';
      results.innerHTML = `<p class="text-danger">Error: ${err.message}</p>`;
    }
  });

  function renderTable(records) {
    if (!records || !records.length) {
      document.getElementById('results').innerHTML = '<p class="text-warning">No records to display.</p>';
      return;
    }
    const headers = Object.keys(records[0]);
    let html = '<table class="table table-bordered table-sm table-hover bg-white"><thead><tr>';
    headers.forEach(h => html += `<th>${h}</th>`);
    html += '</tr></thead><tbody>';
    records.forEach(row => {
      html += '<tr>';
      headers.forEach(h => html += `<td>${row[h]}</td>`);
      html += '</tr>';
    });
    html += '</tbody></table>';
    document.getElementById('results').innerHTML = html;
  }

  document.getElementById('download-btn').addEventListener('click', function() {
    if (!lastData.length) return;
    const headers = Object.keys(lastData[0]);
    const csvRows = [headers.join(','), ...lastData.map(row => headers.map(h => `"${row[h] ?? ''}"`).join(','))];
    const blob = new Blob([csvRows.join('\n')], { type: 'text/csv' });
    const url = URL.createObjectURL(blob);
    const a = document.createElement('a');
    a.href = url;
    a.download = 'fraud_predictions.csv';
    document.body.appendChild(a);
    a.click();
    document.body.removeChild(a);
    URL.revokeObjectURL(url);
  });
</script>
</body>
</html>
